{"ast":null,"code":"import _defineProperty from \"/Applications/DEVCONNECTOR/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case GET_POSTS:\n      return _objectSpread({}, state, {\n        posts: payload,\n        loading: false\n      });\n\n    case GET_POST:\n      return _objectSpread({}, state, {\n        post: payload,\n        loading: false\n      });\n\n    case ADD_POST:\n      return _objectSpread({}, state, {\n        posts: [...state.posts, payload],\n        loading: false\n      });\n\n    case POST_ERROR:\n      return _objectSpread({}, state, {\n        ERROR: payload,\n        loading: false\n      });\n\n    case UPDATE_LIKES:\n      return _objectSpread({}, state, {\n        posts: state.posts.map(post => post._id === payload.postId ? _objectSpread({}, post, {\n          likes: payload.likes\n        }) : post)\n      });\n\n    case ADD_COMMENT:\n      return _objectSpread({}, state, {\n        post: _objectSpread({}, state.post, {\n          comments: payload\n        })\n      });\n\n    case REMOVE_COMMENT:\n      return _objectSpread({}, state, {\n        post: _objectSpread({}, state.post, {\n          comments: state.post.comments.filter(comment => comment._id === payload)\n        })\n      });\n\n    case DELETE_POST:\n      return _objectSpread({}, state, {\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Applications/DEVCONNECTOR/client/src/reducers/post.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","initialState","posts","post","loading","error","state","action","type","payload","ERROR","map","_id","postId","likes","comments","filter","comment"],"mappings":";;;;;;AAAA,SACEA,SADF,EAEEC,UAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,QALF,EAMEC,QANF,EAOEC,WAPF,EAQEC,cARF,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAuC;AAAA,QAC5CC,IAD4C,GAC1BD,MAD0B,CAC5CC,IAD4C;AAAA,QACtCC,OADsC,GAC1BF,MAD0B,CACtCE,OADsC;;AAGpD,UAAQD,IAAR;AACE,SAAKf,SAAL;AACE,+BACKa,KADL;AAEEJ,QAAAA,KAAK,EAAEO,OAFT;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKN,QAAL;AACE,+BACKQ,KADL;AAEEH,QAAAA,IAAI,EAAEM,OAFR;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKP,QAAL;AACE,+BACKS,KADL;AAEEJ,QAAAA,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAiBO,OAAjB,CAFT;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKV,UAAL;AACE,+BACKY,KADL;AAEEI,QAAAA,KAAK,EAAED,OAFT;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKT,YAAL;AACE,+BACKW,KADL;AAEEJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYS,GAAZ,CAAgBR,IAAI,IACzBA,IAAI,CAACS,GAAL,KAAaH,OAAO,CAACI,MAArB,qBAAmCV,IAAnC;AAAyCW,UAAAA,KAAK,EAAEL,OAAO,CAACK;AAAxD,aAAkEX,IAD7D;AAFT;;AAMF,SAAKJ,WAAL;AACE,+BACKO,KADL;AAEEH,QAAAA,IAAI,oBAAOG,KAAK,CAACH,IAAb;AAAmBY,UAAAA,QAAQ,EAAEN;AAA7B;AAFN;;AAIF,SAAKT,cAAL;AACE,+BACKM,KADL;AAEEH,QAAAA,IAAI,oBACCG,KAAK,CAACH,IADP;AAEFY,UAAAA,QAAQ,EAAET,KAAK,CAACH,IAAN,CAAWY,QAAX,CAAoBC,MAApB,CACRC,OAAO,IAAIA,OAAO,CAACL,GAAR,KAAgBH,OADnB;AAFR;AAFN;;AASF,SAAKb,WAAL;AACE,+BACKU,KADL;AAEEJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYc,MAAZ,CAAmBb,IAAI,IAAIA,IAAI,CAACS,GAAL,KAAaH,OAAxC,CAFT;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF;AACE,aAAOE,KAAP;AAtDJ;AAwDD","sourcesContent":["import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT\n} from '../actions/types';\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [...state.posts, payload],\n        loading: false\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        ERROR: payload,\n        loading: false\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map(post =>\n          post._id === payload.postId ? { ...post, likes: payload.likes } : post\n        )\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload }\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            comment => comment._id === payload\n          )\n        }\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}